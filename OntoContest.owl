<?xml version="1.0"?>
<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.semanticweb.org/victor/ontologies/2017/2/untitled-ontology-11"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="http://www.semanticweb.org/victor/ontologies/2017/2/untitled-ontology-11">
    <Prefix name="" IRI="http://www.semanticweb.org/victor/ontologies/2017/2/untitled-ontology-11"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xml" IRI="http://www.w3.org/XML/1998/namespace"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Declaration>
        <ObjectProperty IRI="#Solved_By"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Solution"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Naive"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Supervised_Learning"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Machine_Learning"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Complex"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Imperatives"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Recursive"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#binary_tree_search"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Polynomial"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Implemented_In"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Simple"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Advanced"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Listed_In"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#naive_connected_graph_check"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Based_On"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Factorithmic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Sorting_Algorithms"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Unsupervised"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Problem"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Hard"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#Has_Attempts"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Medium"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Polylogarithmic"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#brians_good_luck_problem"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Recursive_Sorting"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Branch_And_Bound"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Data_Structures"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#exhaustive_search"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Super_Exponential"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#log_n"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Beginner"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Solves"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Greedy"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Colouring_Algorithm"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#n_factorial"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Functionals"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Similar_To"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Optimization_And_Recursion"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#naive_search"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Slower_Than"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Languages"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Dynamic_Programming"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Randomized"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Lists"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Graphs"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#bobbys_graph_adventure"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Random_Sorting"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#Has_Success"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Brute_Force"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#quadratic"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Divide_And_Conquer"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Complexity"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#ryans_sales_pitch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Exponential"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#two_power_n"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Monte_Carlo"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Faster_Than"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Master"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Used_In"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Contests"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#c++"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Easy"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Paradigm"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#Computes_In"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Intermediate"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#haskell"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Shortest_Path_Algorithm"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="#Complex"/>
        <ObjectUnionOf>
            <ObjectIntersectionOf>
                <Class IRI="#Solution"/>
                <ObjectUnionOf>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#Computes_In"/>
                        <ObjectUnionOf>
                            <Class IRI="#Exponential"/>
                            <Class IRI="#Factorithmic"/>
                            <Class IRI="#Super_Exponential"/>
                        </ObjectUnionOf>
                    </ObjectSomeValuesFrom>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#Implemented_In"/>
                        <Class IRI="#Functionals"/>
                    </ObjectSomeValuesFrom>
                </ObjectUnionOf>
                <ObjectComplementOf>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#Based_On"/>
                        <Class IRI="#Naive"/>
                    </ObjectSomeValuesFrom>
                </ObjectComplementOf>
            </ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#Solves"/>
                <ObjectUnionOf>
                    <Class IRI="#Hard"/>
                    <Class IRI="#Master"/>
                    <Class IRI="#Medium"/>
                </ObjectUnionOf>
            </ObjectSomeValuesFrom>
        </ObjectUnionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Contests"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#Lists"/>
            <Class IRI="#Problem"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Easy"/>
        <ObjectIntersectionOf>
            <Class IRI="#Problem"/>
            <ObjectUnionOf>
                <ObjectSomeValuesFrom>
                    <ObjectProperty IRI="#Based_On"/>
                    <Class IRI="#Naive"/>
                </ObjectSomeValuesFrom>
                <DataSomeValuesFrom>
                    <DataProperty IRI="#Has_Attempts"/>
                    <DatatypeRestriction>
                        <Datatype abbreviatedIRI="xsd:integer"/>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#minInclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#integer">300</Literal>
                        </FacetRestriction>
                    </DatatypeRestriction>
                </DataSomeValuesFrom>
                <DataSomeValuesFrom>
                    <DataProperty IRI="#Has_Success"/>
                    <DatatypeRestriction>
                        <Datatype abbreviatedIRI="xsd:double"/>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#minInclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">80.0</Literal>
                        </FacetRestriction>
                    </DatatypeRestriction>
                </DataSomeValuesFrom>
            </ObjectUnionOf>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Hard"/>
        <ObjectIntersectionOf>
            <Class IRI="#Problem"/>
            <ObjectUnionOf>
                <ObjectSomeValuesFrom>
                    <ObjectProperty IRI="#Based_On"/>
                    <ObjectUnionOf>
                        <Class IRI="#Graphs"/>
                        <Class IRI="#Machine_Learning"/>
                    </ObjectUnionOf>
                </ObjectSomeValuesFrom>
                <DataSomeValuesFrom>
                    <DataProperty IRI="#Has_Attempts"/>
                    <DatatypeRestriction>
                        <Datatype abbreviatedIRI="xsd:integer"/>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#maxExclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#integer">200</Literal>
                        </FacetRestriction>
                    </DatatypeRestriction>
                </DataSomeValuesFrom>
                <DataSomeValuesFrom>
                    <DataProperty IRI="#Has_Success"/>
                    <DatatypeRestriction>
                        <Datatype abbreviatedIRI="xsd:double"/>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#minInclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">10.0</Literal>
                        </FacetRestriction>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#maxExclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">50.0</Literal>
                        </FacetRestriction>
                    </DatatypeRestriction>
                </DataSomeValuesFrom>
            </ObjectUnionOf>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Machine_Learning"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#Used_In"/>
            <Class IRI="#Complex"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Master"/>
        <ObjectIntersectionOf>
            <Class IRI="#Problem"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#Based_On"/>
                <ObjectIntersectionOf>
                    <Class IRI="#Machine_Learning"/>
                    <ObjectComplementOf>
                        <Class IRI="#Graphs"/>
                    </ObjectComplementOf>
                </ObjectIntersectionOf>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Medium"/>
        <ObjectIntersectionOf>
            <Class IRI="#Problem"/>
            <ObjectUnionOf>
                <ObjectSomeValuesFrom>
                    <ObjectProperty IRI="#Based_On"/>
                    <ObjectUnionOf>
                        <Class IRI="#Data_Structures"/>
                        <Class IRI="#Optimization_And_Recursion"/>
                        <Class IRI="#Randomized"/>
                        <Class IRI="#Sorting_Algorithms"/>
                    </ObjectUnionOf>
                </ObjectSomeValuesFrom>
                <DataSomeValuesFrom>
                    <DataProperty IRI="#Has_Attempts"/>
                    <DatatypeRestriction>
                        <Datatype abbreviatedIRI="xsd:integer"/>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#minInclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#integer">200</Literal>
                        </FacetRestriction>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#maxExclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#integer">300</Literal>
                        </FacetRestriction>
                    </DatatypeRestriction>
                </DataSomeValuesFrom>
                <DataSomeValuesFrom>
                    <DataProperty IRI="#Has_Success"/>
                    <DatatypeRestriction>
                        <Datatype abbreviatedIRI="xsd:double"/>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#minInclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">50.0</Literal>
                        </FacetRestriction>
                        <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#maxExclusive">
                            <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">80.0</Literal>
                        </FacetRestriction>
                    </DatatypeRestriction>
                </DataSomeValuesFrom>
            </ObjectUnionOf>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Naive"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#Used_In"/>
            <Class IRI="#Simple"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Simple"/>
        <ObjectIntersectionOf>
            <Class IRI="#Solution"/>
            <ObjectUnionOf>
                <ObjectIntersectionOf>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#Computes_In"/>
                        <ObjectUnionOf>
                            <Class IRI="#Polylogarithmic"/>
                            <Class IRI="#Polynomial"/>
                        </ObjectUnionOf>
                    </ObjectSomeValuesFrom>
                    <ObjectSomeValuesFrom>
                        <ObjectProperty IRI="#Implemented_In"/>
                        <Class IRI="#Imperatives"/>
                    </ObjectSomeValuesFrom>
                </ObjectIntersectionOf>
                <ObjectSomeValuesFrom>
                    <ObjectProperty IRI="#Solves"/>
                    <Class IRI="#Easy"/>
                </ObjectSomeValuesFrom>
            </ObjectUnionOf>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Solution"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#Solves"/>
            <Class IRI="#Problem"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="#Advanced"/>
        <Class IRI="#Contests"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Advanced"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#Lists"/>
            <ObjectUnionOf>
                <Class IRI="#Hard"/>
                <Class IRI="#Master"/>
            </ObjectUnionOf>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Beginner"/>
        <Class IRI="#Contests"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Beginner"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#Lists"/>
            <Class IRI="#Easy"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Branch_And_Bound"/>
        <Class IRI="#Optimization_And_Recursion"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Brute_Force"/>
        <Class IRI="#Naive"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Colouring_Algorithm"/>
        <Class IRI="#Graphs"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Complex"/>
        <Class IRI="#Solution"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Data_Structures"/>
        <Class IRI="#Paradigm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Divide_And_Conquer"/>
        <Class IRI="#Optimization_And_Recursion"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Dynamic_Programming"/>
        <Class IRI="#Optimization_And_Recursion"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Easy"/>
        <Class IRI="#Problem"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Exponential"/>
        <ObjectIntersectionOf>
            <Class IRI="#Complexity"/>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="#Faster_Than"/>
                <Class IRI="#Super_Exponential"/>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Factorithmic"/>
        <Class IRI="#Complexity"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Functionals"/>
        <Class IRI="#Languages"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Graphs"/>
        <Class IRI="#Paradigm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Greedy"/>
        <Class IRI="#Naive"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Hard"/>
        <Class IRI="#Problem"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Imperatives"/>
        <Class IRI="#Languages"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Intermediate"/>
        <Class IRI="#Contests"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Intermediate"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#Lists"/>
            <Class IRI="#Medium"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Machine_Learning"/>
        <Class IRI="#Paradigm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Master"/>
        <Class IRI="#Problem"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Medium"/>
        <Class IRI="#Problem"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Monte_Carlo"/>
        <Class IRI="#Randomized"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Naive"/>
        <Class IRI="#Paradigm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Optimization_And_Recursion"/>
        <Class IRI="#Paradigm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Polylogarithmic"/>
        <ObjectIntersectionOf>
            <Class IRI="#Complexity"/>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="#Faster_Than"/>
                <Class IRI="#Polylogarithmic"/>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Polynomial"/>
        <ObjectIntersectionOf>
            <Class IRI="#Complexity"/>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="#Faster_Than"/>
                <Class IRI="#Exponential"/>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Random_Sorting"/>
        <Class IRI="#Randomized"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Random_Sorting"/>
        <Class IRI="#Sorting_Algorithms"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Randomized"/>
        <Class IRI="#Paradigm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Recursive"/>
        <Class IRI="#Optimization_And_Recursion"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Recursive_Sorting"/>
        <Class IRI="#Optimization_And_Recursion"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Recursive_Sorting"/>
        <Class IRI="#Sorting_Algorithms"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Shortest_Path_Algorithm"/>
        <Class IRI="#Graphs"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Simple"/>
        <Class IRI="#Solution"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Solution"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#Based_On"/>
            <Class IRI="#Paradigm"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Sorting_Algorithms"/>
        <Class IRI="#Paradigm"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Super_Exponential"/>
        <ObjectIntersectionOf>
            <Class IRI="#Complexity"/>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="#Faster_Than"/>
                <Class IRI="#Factorithmic"/>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Supervised_Learning"/>
        <Class IRI="#Machine_Learning"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#Unsupervised"/>
        <Class IRI="#Machine_Learning"/>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="#Complexity"/>
        <Class IRI="#Contests"/>
        <Class IRI="#Languages"/>
        <Class IRI="#Paradigm"/>
        <Class IRI="#Problem"/>
        <Class IRI="#Solution"/>
    </DisjointClasses>
    <DisjointUnion>
        <Class IRI="#Complexity"/>
        <Class IRI="#Exponential"/>
        <Class IRI="#Factorithmic"/>
        <Class IRI="#Polylogarithmic"/>
        <Class IRI="#Polynomial"/>
        <Class IRI="#Super_Exponential"/>
    </DisjointUnion>
    <DisjointUnion>
        <Class IRI="#Contests"/>
        <Class IRI="#Advanced"/>
        <Class IRI="#Beginner"/>
        <Class IRI="#Intermediate"/>
    </DisjointUnion>
    <DisjointUnion>
        <Class IRI="#Graphs"/>
        <Class IRI="#Colouring_Algorithm"/>
        <Class IRI="#Shortest_Path_Algorithm"/>
    </DisjointUnion>
    <DisjointUnion>
        <Class IRI="#Languages"/>
        <Class IRI="#Functionals"/>
        <Class IRI="#Imperatives"/>
    </DisjointUnion>
    <DisjointUnion>
        <Class IRI="#Machine_Learning"/>
        <Class IRI="#Supervised_Learning"/>
        <Class IRI="#Unsupervised"/>
    </DisjointUnion>
    <DisjointUnion>
        <Class IRI="#Paradigm"/>
        <Class IRI="#Data_Structures"/>
        <Class IRI="#Machine_Learning"/>
        <Class IRI="#Naive"/>
        <ObjectUnionOf>
            <Class IRI="#Graphs"/>
            <Class IRI="#Optimization_And_Recursion"/>
            <Class IRI="#Sorting_Algorithms"/>
        </ObjectUnionOf>
    </DisjointUnion>
    <DisjointUnion>
        <Class IRI="#Problem"/>
        <Class IRI="#Easy"/>
        <Class IRI="#Hard"/>
        <Class IRI="#Medium"/>
    </DisjointUnion>
    <DisjointUnion>
        <Class IRI="#Solution"/>
        <Class IRI="#Complex"/>
        <Class IRI="#Simple"/>
    </DisjointUnion>
    <ClassAssertion>
        <Class IRI="#Functionals"/>
        <NamedIndividual IRI="#haskell"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#Factorithmic"/>
        <NamedIndividual IRI="#n_factorial"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#Brute_Force"/>
        <NamedIndividual IRI="#naive_search"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#Exponential"/>
        <NamedIndividual IRI="#two_power_n"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#Imperatives"/>
        <NamedIndividual IRI="#c++"/>
    </ClassAssertion>
    <DifferentIndividuals>
        <NamedIndividual IRI="#haskell"/>
        <NamedIndividual IRI="#c++"/>
    </DifferentIndividuals>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Computes_In"/>
        <NamedIndividual IRI="#binary_tree_search"/>
        <NamedIndividual IRI="#log_n"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Implemented_In"/>
        <NamedIndividual IRI="#binary_tree_search"/>
        <NamedIndividual IRI="#haskell"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Based_On"/>
        <NamedIndividual IRI="#bobbys_graph_adventure"/>
        <NamedIndividual IRI="#naive_search"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Solves"/>
        <NamedIndividual IRI="#exhaustive_search"/>
        <NamedIndividual IRI="#bobbys_graph_adventure"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Computes_In"/>
        <NamedIndividual IRI="#naive_connected_graph_check"/>
        <NamedIndividual IRI="#n_factorial"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Implemented_In"/>
        <NamedIndividual IRI="#naive_connected_graph_check"/>
        <NamedIndividual IRI="#c++"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Faster_Than"/>
        <NamedIndividual IRI="#quadratic"/>
        <NamedIndividual IRI="#two_power_n"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#Slower_Than"/>
        <NamedIndividual IRI="#quadratic"/>
        <NamedIndividual IRI="#log_n"/>
    </ObjectPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#Has_Success"/>
        <NamedIndividual IRI="#brians_good_luck_problem"/>
        <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">90.0</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#Has_Attempts"/>
        <NamedIndividual IRI="#ryans_sales_pitch"/>
        <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#integer">20</Literal>
    </DataPropertyAssertion>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#Computes_In"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#Solved_By"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#Solves"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <InverseObjectProperties>
        <ObjectProperty IRI="#Based_On"/>
        <ObjectProperty IRI="#Used_In"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#Faster_Than"/>
        <ObjectProperty IRI="#Slower_Than"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#Listed_In"/>
        <ObjectProperty IRI="#Lists"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#Similar_To"/>
        <ObjectProperty IRI="#Similar_To"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#Solved_By"/>
        <ObjectProperty IRI="#Solves"/>
    </InverseObjectProperties>
    <SymmetricObjectProperty>
        <ObjectProperty IRI="#Similar_To"/>
    </SymmetricObjectProperty>
    <AsymmetricObjectProperty>
        <ObjectProperty IRI="#Implemented_In"/>
    </AsymmetricObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#Faster_Than"/>
    </TransitiveObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#Similar_To"/>
    </TransitiveObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#Slower_Than"/>
    </TransitiveObjectProperty>
    <IrreflexiveObjectProperty>
        <ObjectProperty IRI="#Implemented_In"/>
    </IrreflexiveObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Based_On"/>
        <ObjectUnionOf>
            <Class IRI="#Problem"/>
            <Class IRI="#Solution"/>
        </ObjectUnionOf>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Computes_In"/>
        <Class IRI="#Solution"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Faster_Than"/>
        <Class IRI="#Complexity"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Implemented_In"/>
        <Class IRI="#Solution"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Listed_In"/>
        <Class IRI="#Problem"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Lists"/>
        <Class IRI="#Contests"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Similar_To"/>
        <ObjectUnionOf>
            <Class IRI="#Problem"/>
            <Class IRI="#Solution"/>
        </ObjectUnionOf>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Solved_By"/>
        <Class IRI="#Problem"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Solves"/>
        <Class IRI="#Solution"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#Used_In"/>
        <Class IRI="#Paradigm"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Based_On"/>
        <Class IRI="#Paradigm"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Faster_Than"/>
        <Class IRI="#Complexity"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Listed_In"/>
        <Class IRI="#Contests"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Lists"/>
        <Class IRI="#Problem"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Similar_To"/>
        <ObjectUnionOf>
            <Class IRI="#Problem"/>
            <Class IRI="#Solution"/>
        </ObjectUnionOf>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Solved_By"/>
        <Class IRI="#Solution"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Solves"/>
        <Class IRI="#Problem"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#Used_In"/>
        <ObjectUnionOf>
            <Class IRI="#Problem"/>
            <Class IRI="#Solution"/>
        </ObjectUnionOf>
    </ObjectPropertyRange>
    <DataPropertyDomain>
        <DataProperty IRI="#Has_Attempts"/>
        <Class IRI="#Problem"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#Has_Success"/>
        <Class IRI="#Problem"/>
    </DataPropertyDomain>
    <DataPropertyRange>
        <DataProperty IRI="#Has_Attempts"/>
        <Datatype abbreviatedIRI="xsd:integer"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="#Has_Success"/>
        <DatatypeRestriction>
            <Datatype abbreviatedIRI="xsd:double"/>
            <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#minInclusive">
                <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">0.0</Literal>
            </FacetRestriction>
            <FacetRestriction facet="http://www.w3.org/2001/XMLSchema#maxInclusive">
                <Literal datatypeIRI="http://www.w3.org/2001/XMLSchema#double">100.0</Literal>
            </FacetRestriction>
        </DatatypeRestriction>
    </DataPropertyRange>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Paradigm</IRI>
        <Literal xml:lang="en" datatypeIRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral">Paradigm encompasses the set of algorithms, problem domains, and data structures that a problem may be based on (Based_On) and which a solution uses (Based_On)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:seeAlso"/>
        <IRI>#Paradigm</IRI>
        <Literal xml:lang="en" datatypeIRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral">Zhukova, Anna, et al. &quot;Kinetic Simulation Algorithm Ontology.&quot; (2011).</Literal>
    </AnnotationAssertion>
</Ontology>



<!-- Generated by the OWL API (version 4.2.6.20160910-2108) https://github.com/owlcs/owlapi -->

